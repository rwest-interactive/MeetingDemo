/*---------------------------------
		RWest Theme Variables
-----------------------------------*/
// Default Border Radius
$border-radius: 3px;

// mq breakpoints.
$mq-breakpoints: (
	small: 600px,
	medium: 768px,
	large: 1024px,
	xlarge: 1240px
) !default;

$site_width: 1140px;
$wide_width: 1240px;
$padding-left: 15px;
$padding-right: 15px;

$margin-top: 60px;
$margin-bottom: 60px;
$row-max-width: 1440px;
$mobile-gutter-width: .625rem;
$gutter-width: .9375rem;
$medium: 641px;
$large: 1025px;
$xlarge: 1441px;
$xxlarge: 1921px;

/*---------------------------------
		RWest Theme Colors Variables
-----------------------------------*/
$black-primary: #090a0f;
$gray-primary: #434343;
$gray-secondary: #e7ebf1;
$white-primary: #ffffff;

// Default Colors
$black: #000000;
$black-900: #3d3d3d;
$black-860: #595858;
$black-850: #323232;
$black-800: #414042;
$black-600: #3d3e40;
$black-700: #595959;
$black-100: #282828;
$black-50: #5d5d5d;

$white: #fff;

$light-gray-100: #E7EBF1;
$dark-gray-100: #434343;

$gray-100: #eff3f6;
$gray-150: #eee;
$gray-160: #e2eaee;
$gray-200: #ccc;
$gray-300: #555;

$blue-900: #3344d9;
$blue-800: #322ebb;
$blue-500: #355180;
$blue-300: #6258d5;
$blue-200: #0673a9;
$blue-100: #0192cc;
$blue-80: #0183c6;
$blue-40: #2791db;
$blue-50: #39a7e2;
$blue-40: #38affd;
$blue-20: #e4f3fd;

$purple-800: #4046ff;

/*---------------------------------
		Opacity
-----------------------------------*/

$opacity-black-075: rgba(0, 0, 0, 0.075);
$opacity-black-015: rgba(0, 0, 0, 0.15);

/*---------------------------------
		Gradient
-----------------------------------*/

$header-gradient: linear-gradient(to bottom, $black-900 0%, $black-100 100%);
$link-hover-gradient: linear-gradient(to bottom, $blue-100 0%, $blue-200 100%);

/*---------------------------------
		Element Colors
-----------------------------------*/

// <body>
$color__body-text: $black;
$color__background-body: $white;

// <a>
$color__link: $blue-300;
$color__link-hover: $blue-300;

$color__background-button: $gray-100;
$color__background-button-hover: $gray-100;
$color__border-button: $light-gray-100;
$color__border-button-hover: $black;

$color__border-input: $gray-100;
$color__text-input: $light-gray-100;
$color__text-input-focus: $black;

// <pre>, <code>
$color__background-pre: $gray-100;

// <hr>
$color__background-hr: $gray-150;
$color__background-table: $blue-20;

/*---------------------------------
		Border Colors
-----------------------------------*/

$color__border-light: $gray-100;
$color__border-fieldset: $gray-200;
$color__border-table: $gray-200;
$color__border-header: $gray-300;

/*----------------
		Font
------------------*/
// Global theme fonts.
$font__main: "Unna", sans-serif;
$font__secondary: "Montserrat";
$font__tertiary: 'Roboto', sans-serif;
// Global code font
$font__code: "Unna", sans-serif, monospace;
// Fallback font when font is not loaded via WebFonts JS.
$font__fallback: sans-serif;
// Base line height.
$font__base-line-height: 30px;

/*---------------------------------
		Font Weights
-----------------------------------*/
$light: 300;
$normal: 400;
$semibold: 500;
$bold: 700;
// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin font-smoothing() {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin font-family( $font: $font__main ) {
	font-family: $font__main;
}

/**
 * Add font scale with media query as per configuration on $body-text
 * Ex: @include body-text( h1 );
 * This will add font-size and line-height with different breakpoints.
 */
// @mixin body-text( $level: normal, $body-text: $body-text, $device-size: false ) {
// 	@if type-of($body-text) != "map" {
// 		@error "`#{$body-text}` is not a valid value for $values. It must be a list.";
// 	}

// 	$size: map_get($body-text, $level);

// 	@if type-of($size) == "map" {

// 		@if $device-size == false {
// 			@each $device, $values in $size {

// 				@if $device != "small" {
// 					@include mq($from: $device) {
// 						font-size: map_get($values, "font-size");
// 						line-height: map_get($values, "line-height");
// 					}
// 				} @else {
// 					font-size: map_get($values, "font-size");
// 					line-height: map_get($values, "line-height");
// 				}
// 			}
// 		} @else {
// 			$device_values: map_get($size, $device-size);

// 			font-size: map_get($device_values, "font-size");
// 			line-height: map_get($device_values, "line-height");
// 		}
// 	}
// }
@mixin clearfix{
	&::after {
		visibility: hidden;
		display: block;
		font-size: 0;
		content: '';
		clear: both;
		height: 0;
	}
}

@mixin media($args...) {
  $media-type: 'only screen';
  $media-type-key: 'media-type';
  $args: keywords($args);
  $expr: '';

  @if map-has-key($args, $media-type-key) {
    $media-type: map-get($args, $media-type-key);
    $args: map-remove($args, $media-type-key);
  }

  @each $key, $value in $args {
    @if $value {
      $expr: "#{$expr} and (#{$key}: #{$value})";
    }
  }

  @media #{$media-type} #{$expr} {
    @content;
  }
}

@mixin media-max($max){
  @include media($max-width: ($max - 1)) {
    @content;
  }
}

@mixin media-min($min){
  @include media($min-width: $min) {
    @content;
  }
}
@function background_url( $image ) {
	@return url( "../img/" + $image );
}
@function rem($px,$rembase:16){
	@return calc($px/$rembase)+rem;
}