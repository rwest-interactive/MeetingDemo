{"version":3,"file":"./blocks/media-with-content/media-with-content.css","mappings":";;;AAAA;;oCAAA;AA6BA;;oCAAA;AA4CA;;oCAAA;AAOA;;oCAAA;AAOA;;oCAAA;AA4BA;;oCAAA;AASA;;mBAAA;AAcA;;oCAAA;AAuBA;;;;EAAA;AC/JE;EACE;EACA;EACA;EACA;AA4BJ;AA1BE;EACE;AA4BJ;AA1BI;EACE;AA4BN;ADwLE;ECrNE;IAGI;EA8BN;AACF;AA5BI;EACE,gBD6HK;EC5HL;AA8BN;AA5BI;EACE;AA8BN;AA5BI;EACE;EACA,gBDqHK;ECpHL,cDiBM;ACaZ;AA3BE;EACE;AA6BJ;AA5BI;;EAEE;EACD;EACA;EACC;AA8BN;AAvBI;EACE;EACA;AAyBN;ADyJE;ECrLA;IAMI;IACA;EA0BJ;AACF;AAzBI;EATF;IAUI,uBD9BS;IC+BT;EA4BJ;AACF;AD6IE;ECrLA;IAcI,uBDlCS;ICmCT,wBDnCS;ECiEb;AACF;;ACzFA;EACE;AD4FF,C","sources":["webpack://rwest/./src/settings/_variables.scss","webpack://rwest/./src/blocks/media-with-content/_media-with-content.scss","webpack://rwest/./src/blocks/media-with-content/_theme.scss"],"sourcesContent":["/*---------------------------------\n\t\tRWest Theme Variables\n-----------------------------------*/\n// Default Border Radius\n$border-radius: 3px;\n\n// mq breakpoints.\n$mq-breakpoints: (\n\tsmall: 600px,\n\tmedium: 768px,\n\tlarge: 1024px,\n\txlarge: 1240px\n) !default;\n\n$site_width: 1140px;\n$wide_width: 1240px;\n$padding-left: 15px;\n$padding-right: 15px;\n\n$margin-top: 60px;\n$margin-bottom: 60px;\n$row-max-width: 1440px;\n$mobile-gutter-width: .625rem;\n$gutter-width: .9375rem;\n$medium: 641px;\n$large: 1025px;\n$xlarge: 1441px;\n$xxlarge: 1921px;\n\n/*---------------------------------\n\t\tRWest Theme Colors Variables\n-----------------------------------*/\n$black-primary: #090a0f;\n$gray-primary: #434343;\n$gray-secondary: #e7ebf1;\n$white-primary: #ffffff;\n\n// Default Colors\n$black: #000000;\n$black-900: #3d3d3d;\n$black-860: #595858;\n$black-850: #323232;\n$black-800: #414042;\n$black-600: #3d3e40;\n$black-700: #595959;\n$black-100: #282828;\n$black-50: #5d5d5d;\n\n$white: #fff;\n\n$light-gray-100: #E7EBF1;\n$dark-gray-100: #434343;\n\n$gray-100: #eff3f6;\n$gray-150: #eee;\n$gray-160: #e2eaee;\n$gray-200: #ccc;\n$gray-300: #555;\n\n$blue-900: #3344d9;\n$blue-800: #322ebb;\n$blue-500: #355180;\n$blue-300: #6258d5;\n$blue-200: #0673a9;\n$blue-100: #0192cc;\n$blue-80: #0183c6;\n$blue-40: #2791db;\n$blue-50: #39a7e2;\n$blue-40: #38affd;\n$blue-20: #e4f3fd;\n\n$purple-800: #4046ff;\n\n/*---------------------------------\n\t\tOpacity\n-----------------------------------*/\n\n$opacity-black-075: rgba(0, 0, 0, 0.075);\n$opacity-black-015: rgba(0, 0, 0, 0.15);\n\n/*---------------------------------\n\t\tGradient\n-----------------------------------*/\n\n$header-gradient: linear-gradient(to bottom, $black-900 0%, $black-100 100%);\n$link-hover-gradient: linear-gradient(to bottom, $blue-100 0%, $blue-200 100%);\n\n/*---------------------------------\n\t\tElement Colors\n-----------------------------------*/\n\n// <body>\n$color__body-text: $black;\n$color__background-body: $white;\n\n// <a>\n$color__link: $blue-300;\n$color__link-hover: $blue-300;\n\n$color__background-button: $gray-100;\n$color__background-button-hover: $gray-100;\n$color__border-button: $light-gray-100;\n$color__border-button-hover: $black;\n\n$color__border-input: $gray-100;\n$color__text-input: $light-gray-100;\n$color__text-input-focus: $black;\n\n// <pre>, <code>\n$color__background-pre: $gray-100;\n\n// <hr>\n$color__background-hr: $gray-150;\n$color__background-table: $blue-20;\n\n/*---------------------------------\n\t\tBorder Colors\n-----------------------------------*/\n\n$color__border-light: $gray-100;\n$color__border-fieldset: $gray-200;\n$color__border-table: $gray-200;\n$color__border-header: $gray-300;\n\n/*----------------\n\t\tFont\n------------------*/\n// Global theme fonts.\n$font__main: \"Unna\", sans-serif;\n$font__secondary: \"Montserrat\";\n$font__tertiary: 'Roboto', sans-serif;\n// Global code font\n$font__code: \"Unna\", sans-serif, monospace;\n// Fallback font when font is not loaded via WebFonts JS.\n$font__fallback: sans-serif;\n// Base line height.\n$font__base-line-height: 30px;\n\n/*---------------------------------\n\t\tFont Weights\n-----------------------------------*/\n$light: 300;\n$normal: 400;\n$semibold: 500;\n$bold: 700;\n// Center block\n@mixin center-block {\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n@mixin font-smoothing() {\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n\n@mixin font-family( $font: $font__main ) {\n\tfont-family: $font__main;\n}\n\n/**\n * Add font scale with media query as per configuration on $body-text\n * Ex: @include body-text( h1 );\n * This will add font-size and line-height with different breakpoints.\n */\n// @mixin body-text( $level: normal, $body-text: $body-text, $device-size: false ) {\n// \t@if type-of($body-text) != \"map\" {\n// \t\t@error \"`#{$body-text}` is not a valid value for $values. It must be a list.\";\n// \t}\n\n// \t$size: map_get($body-text, $level);\n\n// \t@if type-of($size) == \"map\" {\n\n// \t\t@if $device-size == false {\n// \t\t\t@each $device, $values in $size {\n\n// \t\t\t\t@if $device != \"small\" {\n// \t\t\t\t\t@include mq($from: $device) {\n// \t\t\t\t\t\tfont-size: map_get($values, \"font-size\");\n// \t\t\t\t\t\tline-height: map_get($values, \"line-height\");\n// \t\t\t\t\t}\n// \t\t\t\t} @else {\n// \t\t\t\t\tfont-size: map_get($values, \"font-size\");\n// \t\t\t\t\tline-height: map_get($values, \"line-height\");\n// \t\t\t\t}\n// \t\t\t}\n// \t\t} @else {\n// \t\t\t$device_values: map_get($size, $device-size);\n\n// \t\t\tfont-size: map_get($device_values, \"font-size\");\n// \t\t\tline-height: map_get($device_values, \"line-height\");\n// \t\t}\n// \t}\n// }\n@mixin clearfix{\n\t&::after {\n\t\tvisibility: hidden;\n\t\tdisplay: block;\n\t\tfont-size: 0;\n\t\tcontent: '';\n\t\tclear: both;\n\t\theight: 0;\n\t}\n}\n\n@mixin media($args...) {\n  $media-type: 'only screen';\n  $media-type-key: 'media-type';\n  $args: keywords($args);\n  $expr: '';\n\n  @if map-has-key($args, $media-type-key) {\n    $media-type: map-get($args, $media-type-key);\n    $args: map-remove($args, $media-type-key);\n  }\n\n  @each $key, $value in $args {\n    @if $value {\n      $expr: \"#{$expr} and (#{$key}: #{$value})\";\n    }\n  }\n\n  @media #{$media-type} #{$expr} {\n    @content;\n  }\n}\n\n@mixin media-max($max){\n  @include media($max-width: ($max - 1)) {\n    @content;\n  }\n}\n\n@mixin media-min($min){\n  @include media($min-width: $min) {\n    @content;\n  }\n}\n@function background_url( $image ) {\n\t@return url( \"../img/\" + $image );\n}\n@function rem($px,$rembase:16){\n\t@return calc($px/$rembase)+rem;\n}","@import \"../../settings/variables\";\n.media-with-content{\n  .columns{\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n  .content {\n    padding: rem(40);\n    \n    h3 {\n      margin-bottom: rem(10);\n      @include media-max($medium) {\n        font-size: rem(36);\n      }\n    }\n    h5 {\n      font-weight: $semibold;\n      margin-bottom: rem(20);\n    }\n    p {\n      margin-bottom: rem(20) 0;\n    }\n    p.detail {\n      margin-bottom: rem(20);\n      font-weight: $semibold;\n      color: $black-700;\n    }\n  }\n  .columns.flush {\n    padding: 0 !important;\n    picture,\n    img {\n      object-fit: cover;\n    \theight: 100%;\n    \twidth: 100%;\n      min-height: 100%;\n      // @include media-max($medium) {\n      //   min-height: 260px;\n      // }\n    }\n  }\n  .columns.contained {\n    img {\n      margin-left: auto;\n      margin-right: auto;\n    }\n    @include media-max($medium) {\n      padding-left: 0 !important;\n      padding-right: 0 !important;\n    }\n    @media screen and (min-width: 601px) and (max-width: 1023px) {\n      padding-left: $gutter-width;\n      padding-right: 0;\n    }\n    @include media-min($large) {\n      padding-left: $gutter-width;\n      padding-right: $gutter-width;\n    }\n  }\n  // @media screen and (min-width: 641px) and (max-width: 1023px) {\n  //   .columns.medium-5, .columns.medium-7 {\n  //     flex: 0 0 100%;\n  //     max-width: 100%;\n  //   }\n  // }\n}\n@import \"theme\";",".media-with-content.generations{\n  padding: 20px 0 20px;\n}\n"],"names":[],"sourceRoot":""}